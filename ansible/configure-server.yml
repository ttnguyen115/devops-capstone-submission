- name: "Install dependencies"
  hosts: toggle
  user: ubuntu
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
  pre_tasks:
    - name: "wait 60 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 60
    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false
    - name: "Install Unzip"
      apt:
        name: [ "unzip" ]
        state: latest
        update_cache: yes
  roles:
    - install-awscli
    - install-kubectl

- name: "Authenticate AWS CLI with AWS"
  hosts: toggle
  user: ubuntu
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
  tasks:
    - name: Set the aws_access_key_id
      shell: "aws configure set aws_access_key_id {{ AWS_ACCESS_KEY_ID }}"
    - name: Set the aws_secret_access_key
      shell: "aws configure set aws_secret_access_key {{ AWS_SECRET_ACCESS_KEY }}"
    - name: Set the default.region
      shell: "aws configure set default.region {{ AWS_DEFAULT_REGION }}"

- name: "Fetch kubectl config"
  hosts: toggle
  user: ubuntu
  gather_facts: false
  become: yes
  vars:
    AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
    ENVIRONMENT_NAME: "{{ lookup('env', 'ENVIRONMENT_NAME') }}"
  pre_tasks:
    - name: Create a kubeconfig file for the cluster
      shell: "aws eks update-kubeconfig --region {{ AWS_DEFAULT_REGION }} --name capstone-project-cluster"